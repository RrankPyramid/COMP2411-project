CREATE TABLE CUSTOMER(
	CUSTOMERID INT GENERATED BY DEFAULT AS IDENTITY,
	USERNAME VARCHAR2(50) NOT NULL,
	PASSWORD VARCHAR2(50) NOT NULL,
	PHONENO VARCHAR2(13) NOT NULL,
	PX INT NOT NULL,
	PY INT NOT NULL,
	PRIMARY KEY(CUSTOMERID)
);


CREATE TABLE MERCHANT(
     MERCHANTID INT GENERATED BY DEFAULT AS IDENTITY,
     USERNAME VARCHAR2(50) NOT NULL,
     PASSWORD VARCHAR2(50) NOT NULL,
     PHONENO VARCHAR2(13) NOT NULL,
     PX INT NOT NULL,
     PY INT NOT NULL,
     PRIMARY KEY (MERCHANTID)
);

CREATE TABLE GOODS(
      GOODSID INT GENERATED BY DEFAULT AS IDENTITY,
      MERCHANTID INT,
      PRICE NUMBER(35, 2) NOT NULL,
      NAME VARCHAR2(50) NOT NULL,
      COUNTS INT NOT NULL,
      PRIMARY KEY (GOODSID),
      FOREIGN KEY (MERCHANTID) REFERENCES MERCHANT(MERCHANTID) ON DELETE CASCADE
);

CREATE TABLE ORDERS(
    ORDERID INT GENERATED BY DEFAULT AS IDENTITY,
    MERCHANTID INT NOT NULL,
    CUSTOMERID INT NOT NULL,
    PRICE NUMBER(35, 2) NOT NULL,
    STATUS INT DEFAULT 0 NOT NULL,
    CREATE_TIME TIMESTAMP(2) DEFAULT SYSDATE NOT NULL,
    MODIFY_TIME TIMESTAMP(2) DEFAULT SYSDATE NOT NULL,
    PRIMARY KEY (ORDERID),
    FOREIGN KEY (MERCHANTID) REFERENCES MERCHANT(MERCHANTID) ON DELETE CASCADE,
    FOREIGN KEY (CUSTOMERID) REFERENCES CUSTOMER(CUSTOMERID) ON DELETE CASCADE
);

CREATE TABLE ORDER2GOODS(
    ORDER2GOODSID INT GENERATED BY DEFAULT AS IDENTITY,
    ORDERID INT,
    GOODSID INT,
    PRIMARY KEY (ORDER2GOODSID),
    FOREIGN KEY (ORDERID) REFERENCES ORDERS(ORDERID) ON DELETE CASCADE,
    FOREIGN KEY (GOODSID) REFERENCES GOODS(GOODSID) ON DELETE CASCADE
);


CREATE UNIQUE INDEX CUSTOMER_USERNAME_INDEX ON
    CUSTOMER(USERNAME);

CREATE TABLE DELIVERMAN(
	DELIVERMANID INT GENERATED BY DEFAULT AS IDENTITY,
	USERNAME VARCHAR2(50) NOT NULL,
	PASSWORD VARCHAR2(50) NOT NULL,
	PHONENO VARCHAR2(13) NOT NULL,
	ORDERNO INT,
	PX INT NOT NULL,
	PY INT NOT NULL,
	PRIMARY KEY (DELIVERMANID),
	FOREIGN KEY (ORDERNO) REFERENCES ORDERS(ORDERID) ON DELETE SET NULL
);

CREATE UNIQUE INDEX DELIVERMAN_USERNAME_INDEX ON DELIVERMAN(USERNAME);

CREATE UNIQUE INDEX MERCHANT_USERNAME_INDEX ON MERCHANT(USERNAME);


CREATE OR REPLACE TRIGGER ORDERS_TRIGGER
BEFORE UPDATE ON ORDERS FOR EACH ROW
BEGIN
    :NEW.MODIFY_TIME := SYSDATE;
END;

CREATE OR REPLACE FUNCTION NEAREST_DELIVER_ID(X IN NUMBER, Y IN NUMBER)
RETURN NUMBER
AS
RETID NUMBER;
BEGIN
    SELECT DELIVERMANID INTO RETID FROM DELIVERMAN
    WHERE ORDERNO IS NULL
    AND (ABS(X-PX)+ABS(Y-PY))=(
      SELECT MIN((ABS(X-PX)+ABS(Y-PY))) FROM DELIVERMAN
      WHERE ORDERNO IS NULL
    )
    FETCH FIRST 1 ROWS ONLY;
    RETURN RETID;
END NEAREST_DELIVER_ID;

INSERT into goods(merchantid, price, name, counts) values(1, 20, 'fish', 100);
INSERT into goods(merchantid, price, name, counts) values(2, 30, 'beef', 200);
insert into goods(merchantid, price, name, counts) values(2, 80, 'steak', 20);
insert into goods(merchantid, price, name, counts) values(1, 40, 'sandwich', 5);
insert into goods(merchantid, price, name, counts) values(2, 20, 'fish', 2);

COMMIT;